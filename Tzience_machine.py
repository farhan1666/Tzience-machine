# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Tzience_machine.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_TzienceMachine(object):
    def setupUi(self, TzienceMachine):
        TzienceMachine.setObjectName("TzienceMachine")
        TzienceMachine.resize(385, 553)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(TzienceMachine.sizePolicy().hasHeightForWidth())
        TzienceMachine.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../../Downloads/r2qSmb9_1_-removebg-preview.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        TzienceMachine.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(TzienceMachine)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setObjectName("label")
        self.horizontalLayout_5.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_5.addItem(spacerItem)
        self.simCount = QtWidgets.QSpinBox(self.centralwidget)
        self.simCount.setMinimumSize(QtCore.QSize(100, 0))
        self.simCount.setMaximum(1000000)
        self.simCount.setProperty("value", 10000)
        self.simCount.setObjectName("simCount")
        self.horizontalLayout_5.addWidget(self.simCount)
        self.verticalLayout_2.addLayout(self.horizontalLayout_5)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_6.addWidget(self.label_2)
        spacerItem1 = QtWidgets.QSpacerItem(31, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem1)
        self.gearBox = QtWidgets.QComboBox(self.centralwidget)
        self.gearBox.setMinimumSize(QtCore.QSize(100, 0))
        self.gearBox.setObjectName("gearBox")
        self.gearBox.addItem("")
        self.gearBox.addItem("")
        self.gearBox.addItem("")
        self.gearBox.addItem("")
        self.gearBox.addItem("")
        self.horizontalLayout_6.addWidget(self.gearBox)
        self.verticalLayout_2.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_8.addWidget(self.label_3)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_8.addItem(spacerItem2)
        self.includeMager = QtWidgets.QCheckBox(self.centralwidget)
        self.includeMager.setMinimumSize(QtCore.QSize(50, 0))
        self.includeMager.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.includeMager.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.includeMager.setText("")
        self.includeMager.setChecked(False)
        self.includeMager.setObjectName("includeMager")
        self.horizontalLayout_8.addWidget(self.includeMager)
        self.verticalLayout_2.addLayout(self.horizontalLayout_8)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_10.addWidget(self.label_4)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem3)
        self.includeJad = QtWidgets.QCheckBox(self.centralwidget)
        self.includeJad.setMinimumSize(QtCore.QSize(50, 0))
        self.includeJad.setText("")
        self.includeJad.setObjectName("includeJad")
        self.horizontalLayout_10.addWidget(self.includeJad)
        self.verticalLayout_2.addLayout(self.horizontalLayout_10)
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_11.addWidget(self.label_5)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_11.addItem(spacerItem4)
        self.includeTrips = QtWidgets.QCheckBox(self.centralwidget)
        self.includeTrips.setMinimumSize(QtCore.QSize(50, 0))
        self.includeTrips.setText("")
        self.includeTrips.setObjectName("includeTrips")
        self.horizontalLayout_11.addWidget(self.includeTrips)
        self.verticalLayout_2.addLayout(self.horizontalLayout_11)
        self.horizontalLayout_12 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_12.setObjectName("horizontalLayout_12")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_12.addWidget(self.label_6)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_12.addItem(spacerItem5)
        self.includeZuk = QtWidgets.QCheckBox(self.centralwidget)
        self.includeZuk.setMinimumSize(QtCore.QSize(50, 0))
        self.includeZuk.setText("")
        self.includeZuk.setChecked(True)
        self.includeZuk.setObjectName("includeZuk")
        self.horizontalLayout_12.addWidget(self.includeZuk)
        self.verticalLayout_2.addLayout(self.horizontalLayout_12)
        self.horizontalLayout_19 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_19.setObjectName("horizontalLayout_19")
        self.includeZukMager = QtWidgets.QCheckBox(self.centralwidget)
        self.includeZukMager.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.includeZukMager.setChecked(True)
        self.includeZukMager.setObjectName("includeZukMager")
        self.horizontalLayout_19.addWidget(self.includeZukMager)
        self.includeZukJad = QtWidgets.QCheckBox(self.centralwidget)
        self.includeZukJad.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.includeZukJad.setChecked(True)
        self.includeZukJad.setObjectName("includeZukJad")
        self.horizontalLayout_19.addWidget(self.includeZukJad)
        self.includeZukHealers = QtWidgets.QCheckBox(self.centralwidget)
        self.includeZukHealers.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.includeZukHealers.setChecked(True)
        self.includeZukHealers.setObjectName("includeZukHealers")
        self.horizontalLayout_19.addWidget(self.includeZukHealers)
        self.verticalLayout_2.addLayout(self.horizontalLayout_19)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.startSim_btn = QtWidgets.QPushButton(self.centralwidget)
        self.startSim_btn.setObjectName("startSim_btn")
        self.horizontalLayout_4.addWidget(self.startSim_btn)
        self.verticalLayout_2.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.completionLine = QtWidgets.QLineEdit(self.centralwidget)
        self.completionLine.setEnabled(True)
        self.completionLine.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.completionLine.setAutoFillBackground(True)
        self.completionLine.setReadOnly(True)
        self.completionLine.setObjectName("completionLine")
        self.horizontalLayout_13.addWidget(self.completionLine)
        self.verticalLayout_2.addLayout(self.horizontalLayout_13)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setReadOnly(True)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.mageKillTimeLabel = QtWidgets.QLabel(self.centralwidget)
        self.mageKillTimeLabel.setObjectName("mageKillTimeLabel")
        self.horizontalLayout_14.addWidget(self.mageKillTimeLabel)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem6)
        self.mageKillTimeCopy = QtWidgets.QPushButton(self.centralwidget)
        self.mageKillTimeCopy.setObjectName("mageKillTimeCopy")
        self.horizontalLayout_14.addWidget(self.mageKillTimeCopy)
        self.verticalLayout_2.addLayout(self.horizontalLayout_14)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.singleJadKillTimeLabel = QtWidgets.QLabel(self.centralwidget)
        self.singleJadKillTimeLabel.setObjectName("singleJadKillTimeLabel")
        self.horizontalLayout_15.addWidget(self.singleJadKillTimeLabel)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem7)
        self.singleJadKillTimeCopy = QtWidgets.QPushButton(self.centralwidget)
        self.singleJadKillTimeCopy.setObjectName("singleJadKillTimeCopy")
        self.horizontalLayout_15.addWidget(self.singleJadKillTimeCopy)
        self.verticalLayout_2.addLayout(self.horizontalLayout_15)
        self.horizontalLayout_16 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_16.setObjectName("horizontalLayout_16")
        self.tripleJadsKillTimeLabel = QtWidgets.QLabel(self.centralwidget)
        self.tripleJadsKillTimeLabel.setObjectName("tripleJadsKillTimeLabel")
        self.horizontalLayout_16.addWidget(self.tripleJadsKillTimeLabel)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_16.addItem(spacerItem8)
        self.tripleJadsKillTimeCopy = QtWidgets.QPushButton(self.centralwidget)
        self.tripleJadsKillTimeCopy.setObjectName("tripleJadsKillTimeCopy")
        self.horizontalLayout_16.addWidget(self.tripleJadsKillTimeCopy)
        self.verticalLayout_2.addLayout(self.horizontalLayout_16)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.zukKillTimeLabel = QtWidgets.QLabel(self.centralwidget)
        self.zukKillTimeLabel.setObjectName("zukKillTimeLabel")
        self.horizontalLayout_7.addWidget(self.zukKillTimeLabel)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem9)
        self.zukKillTimeCopy = QtWidgets.QPushButton(self.centralwidget)
        self.zukKillTimeCopy.setObjectName("zukKillTimeCopy")
        self.horizontalLayout_7.addWidget(self.zukKillTimeCopy)
        self.verticalLayout_2.addLayout(self.horizontalLayout_7)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.zukSetTimeLabel = QtWidgets.QLabel(self.centralwidget)
        self.zukSetTimeLabel.setObjectName("zukSetTimeLabel")
        self.horizontalLayout_9.addWidget(self.zukSetTimeLabel)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem10)
        self.zukSetTimeCopy = QtWidgets.QPushButton(self.centralwidget)
        self.zukSetTimeCopy.setObjectName("zukSetTimeCopy")
        self.horizontalLayout_9.addWidget(self.zukSetTimeCopy)
        self.verticalLayout_2.addLayout(self.horizontalLayout_9)
        self.horizontalLayout_17 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_17.setObjectName("horizontalLayout_17")
        self.zukNoSetTimeLabel = QtWidgets.QLabel(self.centralwidget)
        self.zukNoSetTimeLabel.setObjectName("zukNoSetTimeLabel")
        self.horizontalLayout_17.addWidget(self.zukNoSetTimeLabel)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_17.addItem(spacerItem11)
        self.zukNoSetTimeCopy = QtWidgets.QPushButton(self.centralwidget)
        self.zukNoSetTimeCopy.setObjectName("zukNoSetTimeCopy")
        self.horizontalLayout_17.addWidget(self.zukNoSetTimeCopy)
        self.verticalLayout_2.addLayout(self.horizontalLayout_17)
        self.horizontalLayout_18 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_18.setObjectName("horizontalLayout_18")
        self.copyZukSim_btn = QtWidgets.QPushButton(self.centralwidget)
        self.copyZukSim_btn.setObjectName("copyZukSim_btn")
        self.horizontalLayout_18.addWidget(self.copyZukSim_btn)
        self.verticalLayout_2.addLayout(self.horizontalLayout_18)
        TzienceMachine.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(TzienceMachine)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 385, 21))
        self.menubar.setObjectName("menubar")
        self.menuTest = QtWidgets.QMenu(self.menubar)
        self.menuTest.setObjectName("menuTest")
        self.menuList_of_Assumptions = QtWidgets.QMenu(self.menuTest)
        self.menuList_of_Assumptions.setObjectName("menuList_of_Assumptions")
        self.menuGear_setups = QtWidgets.QMenu(self.menuTest)
        self.menuGear_setups.setObjectName("menuGear_setups")
        self.menuTask_Standard = QtWidgets.QMenu(self.menuGear_setups)
        self.menuTask_Standard.setObjectName("menuTask_Standard")
        self.menuAll_Setups_Consistent_gear = QtWidgets.QMenu(self.menuGear_setups)
        self.menuAll_Setups_Consistent_gear.setObjectName("menuAll_Setups_Consistent_gear")
        self.menuTask_Archers = QtWidgets.QMenu(self.menuGear_setups)
        self.menuTask_Archers.setObjectName("menuTask_Archers")
        self.menuTask_Devout = QtWidgets.QMenu(self.menuGear_setups)
        self.menuTask_Devout.setObjectName("menuTask_Devout")
        self.menuOff_Task_Standard = QtWidgets.QMenu(self.menuGear_setups)
        self.menuOff_Task_Standard.setObjectName("menuOff_Task_Standard")
        self.menuOff_Task_Devout = QtWidgets.QMenu(self.menuGear_setups)
        self.menuOff_Task_Devout.setObjectName("menuOff_Task_Devout")
        self.menuCredits = QtWidgets.QMenu(self.menuTest)
        self.menuCredits.setObjectName("menuCredits")
        TzienceMachine.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(TzienceMachine)
        self.statusbar.setObjectName("statusbar")
        TzienceMachine.setStatusBar(self.statusbar)
        self.actionAll_actions_are_tick_perfect = QtWidgets.QAction(TzienceMachine)
        self.actionAll_actions_are_tick_perfect.setObjectName("actionAll_actions_are_tick_perfect")
        self.action2_This_sim_uses_Python_RNG_which_may_differ_slightly_from_Java_RNG = QtWidgets.QAction(TzienceMachine)
        self.action2_This_sim_uses_Python_RNG_which_may_differ_slightly_from_Java_RNG.setObjectName("action2_This_sim_uses_Python_RNG_which_may_differ_slightly_from_Java_RNG")
        self.actionAssumes_Jad_Mager_skip = QtWidgets.QAction(TzienceMachine)
        self.actionAssumes_Jad_Mager_skip.setObjectName("actionAssumes_Jad_Mager_skip")
        self.action4_Assumes_each_Triple_Jad_heals_2_times = QtWidgets.QAction(TzienceMachine)
        self.action4_Assumes_each_Triple_Jad_heals_2_times.setObjectName("action4_Assumes_each_Triple_Jad_heals_2_times")
        self.action5_Assumes_in_a_no_set_Zuk_blowpipe_is_used_to_tag_Jad = QtWidgets.QAction(TzienceMachine)
        self.action5_Assumes_in_a_no_set_Zuk_blowpipe_is_used_to_tag_Jad.setObjectName("action5_Assumes_in_a_no_set_Zuk_blowpipe_is_used_to_tag_Jad")
        self.action6_Assumes_in_a_set_zuk_chins_are_used_to_tag_jad = QtWidgets.QAction(TzienceMachine)
        self.action6_Assumes_in_a_set_zuk_chins_are_used_to_tag_jad.setObjectName("action6_Assumes_in_a_set_zuk_chins_are_used_to_tag_jad")
        self.action7_Assumes_tick_perfect_healer_tagging_on_Zuk_is_always_possible = QtWidgets.QAction(TzienceMachine)
        self.action7_Assumes_tick_perfect_healer_tagging_on_Zuk_is_always_possible.setObjectName("action7_Assumes_tick_perfect_healer_tagging_on_Zuk_is_always_possible")
        self.action8_Assumes_east_west_shield_movement_is_0_time_loss_as_you_can_hit_zuk_in_the_time_it_takes_the_shield_to_travel = QtWidgets.QAction(TzienceMachine)
        self.action8_Assumes_east_west_shield_movement_is_0_time_loss_as_you_can_hit_zuk_in_the_time_it_takes_the_shield_to_travel.setObjectName("action8_Assumes_east_west_shield_movement_is_0_time_loss_as_you_can_hit_zuk_in_the_time_it_takes_the_shield_to_travel")
        self.actionHead_Slayer_helm_i = QtWidgets.QAction(TzienceMachine)
        self.actionHead_Slayer_helm_i.setObjectName("actionHead_Slayer_helm_i")
        self.actionCape_Ava_s_assembler = QtWidgets.QAction(TzienceMachine)
        self.actionCape_Ava_s_assembler.setObjectName("actionCape_Ava_s_assembler")
        self.actionNeck_Necklace_of_Anguish = QtWidgets.QAction(TzienceMachine)
        self.actionNeck_Necklace_of_Anguish.setObjectName("actionNeck_Necklace_of_Anguish")
        self.actionAmmo_Dragon_arrows_Dragon_darts = QtWidgets.QAction(TzienceMachine)
        self.actionAmmo_Dragon_arrows_Dragon_darts.setObjectName("actionAmmo_Dragon_arrows_Dragon_darts")
        self.actionChest_Armadyl_chestplate = QtWidgets.QAction(TzienceMachine)
        self.actionChest_Armadyl_chestplate.setObjectName("actionChest_Armadyl_chestplate")
        self.actionLegs_Armadyl_chainskirt = QtWidgets.QAction(TzienceMachine)
        self.actionLegs_Armadyl_chainskirt.setObjectName("actionLegs_Armadyl_chainskirt")
        self.actionCape_Ava_s_assembler_2 = QtWidgets.QAction(TzienceMachine)
        self.actionCape_Ava_s_assembler_2.setObjectName("actionCape_Ava_s_assembler_2")
        self.actionNeck_Necklace_of_anguish = QtWidgets.QAction(TzienceMachine)
        self.actionNeck_Necklace_of_anguish.setObjectName("actionNeck_Necklace_of_anguish")
        self.actionAmmo_Dragon_arrows_Dragon_darts_2 = QtWidgets.QAction(TzienceMachine)
        self.actionAmmo_Dragon_arrows_Dragon_darts_2.setObjectName("actionAmmo_Dragon_arrows_Dragon_darts_2")
        self.actionBody_Armadyl_Chestplate = QtWidgets.QAction(TzienceMachine)
        self.actionBody_Armadyl_Chestplate.setObjectName("actionBody_Armadyl_Chestplate")
        self.actionLegs_Armadyl_chainskirt_2 = QtWidgets.QAction(TzienceMachine)
        self.actionLegs_Armadyl_chainskirt_2.setObjectName("actionLegs_Armadyl_chainskirt_2")
        self.actionGloves_Barrows_gloves = QtWidgets.QAction(TzienceMachine)
        self.actionGloves_Barrows_gloves.setObjectName("actionGloves_Barrows_gloves")
        self.actionBoots_Pegasian_boots = QtWidgets.QAction(TzienceMachine)
        self.actionBoots_Pegasian_boots.setObjectName("actionBoots_Pegasian_boots")
        self.actionRing_Ring_of_the_gods_i = QtWidgets.QAction(TzienceMachine)
        self.actionRing_Ring_of_the_gods_i.setObjectName("actionRing_Ring_of_the_gods_i")
        self.actionHead_Slayer_helm_i_2 = QtWidgets.QAction(TzienceMachine)
        self.actionHead_Slayer_helm_i_2.setObjectName("actionHead_Slayer_helm_i_2")
        self.actionBoots_Pegasian_boots_2 = QtWidgets.QAction(TzienceMachine)
        self.actionBoots_Pegasian_boots_2.setObjectName("actionBoots_Pegasian_boots_2")
        self.actionRing_Archers_ring_i = QtWidgets.QAction(TzienceMachine)
        self.actionRing_Archers_ring_i.setObjectName("actionRing_Archers_ring_i")
        self.actionHead_Slayer_helm_i_3 = QtWidgets.QAction(TzienceMachine)
        self.actionHead_Slayer_helm_i_3.setObjectName("actionHead_Slayer_helm_i_3")
        self.actionBoots_Devout_boots = QtWidgets.QAction(TzienceMachine)
        self.actionBoots_Devout_boots.setObjectName("actionBoots_Devout_boots")
        self.actionRing_Ring_of_the_gods_i_2 = QtWidgets.QAction(TzienceMachine)
        self.actionRing_Ring_of_the_gods_i_2.setObjectName("actionRing_Ring_of_the_gods_i_2")
        self.actionHead_Armadyl_helmet = QtWidgets.QAction(TzienceMachine)
        self.actionHead_Armadyl_helmet.setObjectName("actionHead_Armadyl_helmet")
        self.actionBoots_Pegasian_boots_3 = QtWidgets.QAction(TzienceMachine)
        self.actionBoots_Pegasian_boots_3.setObjectName("actionBoots_Pegasian_boots_3")
        self.actionRing_Ring_of_the_gods_i_3 = QtWidgets.QAction(TzienceMachine)
        self.actionRing_Ring_of_the_gods_i_3.setObjectName("actionRing_Ring_of_the_gods_i_3")
        self.actionHead_Armadyl_helmet_2 = QtWidgets.QAction(TzienceMachine)
        self.actionHead_Armadyl_helmet_2.setObjectName("actionHead_Armadyl_helmet_2")
        self.actionBoots_Devout_boots_2 = QtWidgets.QAction(TzienceMachine)
        self.actionBoots_Devout_boots_2.setObjectName("actionBoots_Devout_boots_2")
        self.actionRing_Ring_of_the_gods_i_4 = QtWidgets.QAction(TzienceMachine)
        self.actionRing_Ring_of_the_gods_i_4.setObjectName("actionRing_Ring_of_the_gods_i_4")
        self.action9_v = QtWidgets.QAction(TzienceMachine)
        self.action9_v.setObjectName("action9_v")
        self.actionThis_tool_was_made_possible_thanks_to_the_following_people = QtWidgets.QAction(TzienceMachine)
        self.actionThis_tool_was_made_possible_thanks_to_the_following_people.setObjectName("actionThis_tool_was_made_possible_thanks_to_the_following_people")
        self.action_Phoneman_btw_Main_development = QtWidgets.QAction(TzienceMachine)
        self.action_Phoneman_btw_Main_development.setObjectName("action_Phoneman_btw_Main_development")
        self.action_JasonT20015_Moral_support_and_backseating = QtWidgets.QAction(TzienceMachine)
        self.action_JasonT20015_Moral_support_and_backseating.setObjectName("action_JasonT20015_Moral_support_and_backseating")
        self.action_aatykon_Original_idea_for_the_tool = QtWidgets.QAction(TzienceMachine)
        self.action_aatykon_Original_idea_for_the_tool.setObjectName("action_aatykon_Original_idea_for_the_tool")
        self.actionDJ_Kumboi_Jad_healer_research = QtWidgets.QAction(TzienceMachine)
        self.actionDJ_Kumboi_Jad_healer_research.setObjectName("actionDJ_Kumboi_Jad_healer_research")
        self.actionWeapon_Twisted_bow_Toxic_blowpipe = QtWidgets.QAction(TzienceMachine)
        self.actionWeapon_Twisted_bow_Toxic_blowpipe.setObjectName("actionWeapon_Twisted_bow_Toxic_blowpipe")
        self.actionShield_None = QtWidgets.QAction(TzienceMachine)
        self.actionShield_None.setObjectName("actionShield_None")
        self.actionEveryone_from_the_Inferno_Speedrunning_Discord_discord_gg_zuk = QtWidgets.QAction(TzienceMachine)
        self.actionEveryone_from_the_Inferno_Speedrunning_Discord_discord_gg_zuk.setObjectName("actionEveryone_from_the_Inferno_Speedrunning_Discord_discord_gg_zuk")
        self.action10_Assumes_you_are_always_max_potted_the_only_time_where_this_assumption_becomes_questionable_is_during_a_healer_skip = QtWidgets.QAction(TzienceMachine)
        self.action10_Assumes_you_are_always_max_potted_the_only_time_where_this_assumption_becomes_questionable_is_during_a_healer_skip.setObjectName("action10_Assumes_you_are_always_max_potted_the_only_time_where_this_assumption_becomes_questionable_is_during_a_healer_skip")
        self.action_JagexAsh_Clearing_up_how_Jad_Healers_work = QtWidgets.QAction(TzienceMachine)
        self.action_JagexAsh_Clearing_up_how_Jad_Healers_work.setObjectName("action_JagexAsh_Clearing_up_how_Jad_Healers_work")
        self.menuList_of_Assumptions.addAction(self.actionAll_actions_are_tick_perfect)
        self.menuList_of_Assumptions.addAction(self.action2_This_sim_uses_Python_RNG_which_may_differ_slightly_from_Java_RNG)
        self.menuList_of_Assumptions.addAction(self.actionAssumes_Jad_Mager_skip)
        self.menuList_of_Assumptions.addAction(self.action4_Assumes_each_Triple_Jad_heals_2_times)
        self.menuList_of_Assumptions.addAction(self.action5_Assumes_in_a_no_set_Zuk_blowpipe_is_used_to_tag_Jad)
        self.menuList_of_Assumptions.addAction(self.action6_Assumes_in_a_set_zuk_chins_are_used_to_tag_jad)
        self.menuList_of_Assumptions.addAction(self.action7_Assumes_tick_perfect_healer_tagging_on_Zuk_is_always_possible)
        self.menuList_of_Assumptions.addAction(self.action8_Assumes_east_west_shield_movement_is_0_time_loss_as_you_can_hit_zuk_in_the_time_it_takes_the_shield_to_travel)
        self.menuList_of_Assumptions.addAction(self.action10_Assumes_you_are_always_max_potted_the_only_time_where_this_assumption_becomes_questionable_is_during_a_healer_skip)
        self.menuTask_Standard.addAction(self.actionHead_Slayer_helm_i)
        self.menuTask_Standard.addAction(self.actionBoots_Pegasian_boots)
        self.menuTask_Standard.addAction(self.actionRing_Ring_of_the_gods_i)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionCape_Ava_s_assembler_2)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionNeck_Necklace_of_anguish)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionAmmo_Dragon_arrows_Dragon_darts_2)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionWeapon_Twisted_bow_Toxic_blowpipe)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionBody_Armadyl_Chestplate)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionShield_None)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionLegs_Armadyl_chainskirt_2)
        self.menuAll_Setups_Consistent_gear.addAction(self.actionGloves_Barrows_gloves)
        self.menuTask_Archers.addAction(self.actionHead_Slayer_helm_i_2)
        self.menuTask_Archers.addAction(self.actionBoots_Pegasian_boots_2)
        self.menuTask_Archers.addAction(self.actionRing_Archers_ring_i)
        self.menuTask_Devout.addAction(self.actionHead_Slayer_helm_i_3)
        self.menuTask_Devout.addAction(self.actionBoots_Devout_boots)
        self.menuTask_Devout.addAction(self.actionRing_Ring_of_the_gods_i_2)
        self.menuOff_Task_Standard.addAction(self.actionHead_Armadyl_helmet)
        self.menuOff_Task_Standard.addAction(self.actionBoots_Pegasian_boots_3)
        self.menuOff_Task_Standard.addAction(self.actionRing_Ring_of_the_gods_i_3)
        self.menuOff_Task_Devout.addAction(self.actionHead_Armadyl_helmet_2)
        self.menuOff_Task_Devout.addAction(self.actionBoots_Devout_boots_2)
        self.menuOff_Task_Devout.addAction(self.actionRing_Ring_of_the_gods_i_4)
        self.menuGear_setups.addAction(self.menuAll_Setups_Consistent_gear.menuAction())
        self.menuGear_setups.addAction(self.menuTask_Standard.menuAction())
        self.menuGear_setups.addAction(self.menuTask_Archers.menuAction())
        self.menuGear_setups.addAction(self.menuTask_Devout.menuAction())
        self.menuGear_setups.addAction(self.menuOff_Task_Standard.menuAction())
        self.menuGear_setups.addAction(self.menuOff_Task_Devout.menuAction())
        self.menuCredits.addAction(self.actionThis_tool_was_made_possible_thanks_to_the_following_people)
        self.menuCredits.addSeparator()
        self.menuCredits.addAction(self.action_Phoneman_btw_Main_development)
        self.menuCredits.addAction(self.action_JasonT20015_Moral_support_and_backseating)
        self.menuCredits.addAction(self.action_aatykon_Original_idea_for_the_tool)
        self.menuCredits.addAction(self.actionDJ_Kumboi_Jad_healer_research)
        self.menuCredits.addAction(self.action_JagexAsh_Clearing_up_how_Jad_Healers_work)
        self.menuCredits.addAction(self.actionEveryone_from_the_Inferno_Speedrunning_Discord_discord_gg_zuk)
        self.menuTest.addAction(self.menuList_of_Assumptions.menuAction())
        self.menuTest.addAction(self.menuGear_setups.menuAction())
        self.menuTest.addAction(self.menuCredits.menuAction())
        self.menubar.addAction(self.menuTest.menuAction())

        self.retranslateUi(TzienceMachine)
        QtCore.QMetaObject.connectSlotsByName(TzienceMachine)

    def retranslateUi(self, TzienceMachine):
        _translate = QtCore.QCoreApplication.translate
        TzienceMachine.setWindowTitle(_translate("TzienceMachine", "Tzience Machine"))
        self.label.setText(_translate("TzienceMachine", "Number of Simulations"))
        self.label_2.setText(_translate("TzienceMachine", "Gear Setup"))
        self.gearBox.setItemText(0, _translate("TzienceMachine", "Task Standard"))
        self.gearBox.setItemText(1, _translate("TzienceMachine", "Task Archers"))
        self.gearBox.setItemText(2, _translate("TzienceMachine", "Task Devout"))
        self.gearBox.setItemText(3, _translate("TzienceMachine", "Off Task Standard"))
        self.gearBox.setItemText(4, _translate("TzienceMachine", "Off Task Devout"))
        self.label_3.setText(_translate("TzienceMachine", "Include Mager?"))
        self.label_4.setText(_translate("TzienceMachine", "Include Single Jad?"))
        self.label_5.setText(_translate("TzienceMachine", "Include Triple Jads?"))
        self.label_6.setText(_translate("TzienceMachine", "Include Zuk?"))
        self.includeZukMager.setText(_translate("TzienceMachine", "Kill Zuk Mager"))
        self.includeZukJad.setText(_translate("TzienceMachine", "Kill Zuk Jad"))
        self.includeZukHealers.setText(_translate("TzienceMachine", "Kill Zuk Healers"))
        self.startSim_btn.setText(_translate("TzienceMachine", "Start Simulations"))
        self.completionLine.setText(_translate("TzienceMachine", "x simulations completed with Task Standard. [Completed in 00:00]"))
        self.lineEdit.setText(_translate("TzienceMachine", "Total no set Zuks: x (xx.xx%)"))
        self.mageKillTimeLabel.setText(_translate("TzienceMachine", "Mager average kill time: x ticks"))
        self.mageKillTimeCopy.setText(_translate("TzienceMachine", "Copy data"))
        self.singleJadKillTimeLabel.setText(_translate("TzienceMachine", "Single Jad average kill time: x ticks"))
        self.singleJadKillTimeCopy.setText(_translate("TzienceMachine", "Copy data"))
        self.tripleJadsKillTimeLabel.setText(_translate("TzienceMachine", "Triple Jad average kill time: x ticks"))
        self.tripleJadsKillTimeCopy.setText(_translate("TzienceMachine", "Copy data"))
        self.zukKillTimeLabel.setText(_translate("TzienceMachine", "Zuk average kill time: x ticks"))
        self.zukKillTimeCopy.setText(_translate("TzienceMachine", "Copy data"))
        self.zukSetTimeLabel.setText(_translate("TzienceMachine", "Zuk with set average time: x ticks"))
        self.zukSetTimeCopy.setText(_translate("TzienceMachine", "Copy data"))
        self.zukNoSetTimeLabel.setText(_translate("TzienceMachine", "Zuk without set average time: x ticks"))
        self.zukNoSetTimeCopy.setText(_translate("TzienceMachine", "Copy data"))
        self.copyZukSim_btn.setText(_translate("TzienceMachine", "Copy Zuk duration distribution"))
        self.menuTest.setTitle(_translate("TzienceMachine", "About"))
        self.menuList_of_Assumptions.setTitle(_translate("TzienceMachine", "List of Assumptions"))
        self.menuGear_setups.setTitle(_translate("TzienceMachine", "Gear setups"))
        self.menuTask_Standard.setTitle(_translate("TzienceMachine", "Task Standard"))
        self.menuAll_Setups_Consistent_gear.setTitle(_translate("TzienceMachine", "All Setups (Consistent gear)"))
        self.menuTask_Archers.setTitle(_translate("TzienceMachine", "Task Archers"))
        self.menuTask_Devout.setTitle(_translate("TzienceMachine", "Task Devout"))
        self.menuOff_Task_Standard.setTitle(_translate("TzienceMachine", "Off Task Standard"))
        self.menuOff_Task_Devout.setTitle(_translate("TzienceMachine", "Off Task Devout"))
        self.menuCredits.setTitle(_translate("TzienceMachine", "Credits"))
        self.actionAll_actions_are_tick_perfect.setText(_translate("TzienceMachine", "1. All actions are tick perfect"))
        self.action2_This_sim_uses_Python_RNG_which_may_differ_slightly_from_Java_RNG.setText(_translate("TzienceMachine", "2. This sim uses Python RNG which may differ slightly from Java RNG"))
        self.actionAssumes_Jad_Mager_skip.setText(_translate("TzienceMachine", "3. Assumes Single Jad heals 3 times"))
        self.action4_Assumes_each_Triple_Jad_heals_2_times.setText(_translate("TzienceMachine", "4. Assumes each Triple Jad heals 2 times"))
        self.action5_Assumes_in_a_no_set_Zuk_blowpipe_is_used_to_tag_Jad.setText(_translate("TzienceMachine", "5. Assumes in a no set Zuk blowpipe is used to tag Jad"))
        self.action6_Assumes_in_a_set_zuk_chins_are_used_to_tag_jad.setText(_translate("TzienceMachine", "6. Assumes in a set zuk chins are used to tag jad"))
        self.action7_Assumes_tick_perfect_healer_tagging_on_Zuk_is_always_possible.setText(_translate("TzienceMachine", "7. Assumes tick perfect healer tagging on Zuk is always possible"))
        self.action8_Assumes_east_west_shield_movement_is_0_time_loss_as_you_can_hit_zuk_in_the_time_it_takes_the_shield_to_travel.setText(_translate("TzienceMachine", "8. Assumes east/west shield movement is 0 time loss (as you can hit zuk in the time it takes the shield to travel)"))
        self.actionHead_Slayer_helm_i.setText(_translate("TzienceMachine", "Head: Slayer helm (i)"))
        self.actionCape_Ava_s_assembler.setText(_translate("TzienceMachine", "Cape: Ava\'s assembler"))
        self.actionNeck_Necklace_of_Anguish.setText(_translate("TzienceMachine", "Neck: Necklace of Anguish"))
        self.actionAmmo_Dragon_arrows_Dragon_darts.setText(_translate("TzienceMachine", "Ammo: Dragon arrows/Dragon darts"))
        self.actionChest_Armadyl_chestplate.setText(_translate("TzienceMachine", "Chest: Armadyl chestplate"))
        self.actionLegs_Armadyl_chainskirt.setText(_translate("TzienceMachine", "Legs: Armadyl chainskirt"))
        self.actionCape_Ava_s_assembler_2.setText(_translate("TzienceMachine", "Cape: Ava\'s assembler"))
        self.actionNeck_Necklace_of_anguish.setText(_translate("TzienceMachine", "Neck: Necklace of anguish"))
        self.actionAmmo_Dragon_arrows_Dragon_darts_2.setText(_translate("TzienceMachine", "Ammo: Dragon arrows/Dragon darts"))
        self.actionBody_Armadyl_Chestplate.setText(_translate("TzienceMachine", "Body: Armadyl Chestplate"))
        self.actionLegs_Armadyl_chainskirt_2.setText(_translate("TzienceMachine", "Legs: Armadyl chainskirt"))
        self.actionGloves_Barrows_gloves.setText(_translate("TzienceMachine", "Gloves: Barrows gloves"))
        self.actionBoots_Pegasian_boots.setText(_translate("TzienceMachine", "Boots: Pegasian boots"))
        self.actionRing_Ring_of_the_gods_i.setText(_translate("TzienceMachine", "Ring: Ring of the gods (i)"))
        self.actionHead_Slayer_helm_i_2.setText(_translate("TzienceMachine", "Head: Slayer helm (i)"))
        self.actionBoots_Pegasian_boots_2.setText(_translate("TzienceMachine", "Boots: Pegasian boots"))
        self.actionRing_Archers_ring_i.setText(_translate("TzienceMachine", "Ring: Archers ring (i)"))
        self.actionHead_Slayer_helm_i_3.setText(_translate("TzienceMachine", "Head: Slayer helm (i)"))
        self.actionBoots_Devout_boots.setText(_translate("TzienceMachine", "Boots: Devout boots"))
        self.actionRing_Ring_of_the_gods_i_2.setText(_translate("TzienceMachine", "Ring: Ring of the gods (i)"))
        self.actionHead_Armadyl_helmet.setText(_translate("TzienceMachine", "Head: Armadyl helmet"))
        self.actionBoots_Pegasian_boots_3.setText(_translate("TzienceMachine", "Boots: Pegasian boots"))
        self.actionRing_Ring_of_the_gods_i_3.setText(_translate("TzienceMachine", "Ring: Ring of the gods (i)"))
        self.actionHead_Armadyl_helmet_2.setText(_translate("TzienceMachine", "Head: Armadyl helmet"))
        self.actionBoots_Devout_boots_2.setText(_translate("TzienceMachine", "Boots: Devout boots"))
        self.actionRing_Ring_of_the_gods_i_4.setText(_translate("TzienceMachine", "Ring: Ring of the gods (i)"))
        self.action9_v.setText(_translate("TzienceMachine", "9. Assumes Jad heals are flat, these heal values are based off of an average obtained from multiple VODs"))
        self.actionThis_tool_was_made_possible_thanks_to_the_following_people.setText(_translate("TzienceMachine", "This tool was made possible thanks to the following people"))
        self.action_Phoneman_btw_Main_development.setText(_translate("TzienceMachine", "@Phoneman_btw - Main development"))
        self.action_JasonT20015_Moral_support_and_backseating.setText(_translate("TzienceMachine", "@JasonT20015 - Moral support and backseating"))
        self.action_aatykon_Original_idea_for_the_tool.setText(_translate("TzienceMachine", "@aatykon - Original idea for the tool"))
        self.actionDJ_Kumboi_Jad_healer_research.setText(_translate("TzienceMachine", "DJ Kumboi#0001 - Jad healer/Miscellaneous research"))
        self.actionWeapon_Twisted_bow_Toxic_blowpipe.setText(_translate("TzienceMachine", "Weapon: Twisted bow/Toxic blowpipe"))
        self.actionShield_None.setText(_translate("TzienceMachine", "Shield: None"))
        self.actionEveryone_from_the_Inferno_Speedrunning_Discord_discord_gg_zuk.setText(_translate("TzienceMachine", "Everyone from the Inferno Speedrunning Discord discord.gg/zuk"))
        self.action10_Assumes_you_are_always_max_potted_the_only_time_where_this_assumption_becomes_questionable_is_during_a_healer_skip.setText(_translate("TzienceMachine", "9. Assumes you are always max potted, the only time where this assumption becomes questionable is during a healer skip."))
        self.action_JagexAsh_Clearing_up_how_Jad_Healers_work.setText(_translate("TzienceMachine", "@JagexAsh - Clearing up how Jad Healers work"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    TzienceMachine = QtWidgets.QMainWindow()
    ui = Ui_TzienceMachine()
    ui.setupUi(TzienceMachine)
    TzienceMachine.show()
    sys.exit(app.exec_())
